{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\projets\\\\loginForm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\projets\\\\loginForm\\\\src\\\\components\\\\form\\\\form.tsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport styled from \"styled-components\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { createMuiTheme, createStyles, makeStyles, ThemeProvider, withStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = [\"email\", \"password\"];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = \"Required\";\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  return errors;\n};\n\nconst Container = styled.div`\n  width: 35%;\n  height: max-content;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  @media only screen and (max-width: 768px) {\n    width: 40%;\n  }\n  @media only screen and (max-width: 576px) {\n    width: 80%;\n  }\n  @media only screen and (max-width: 375px) {\n    width: 90%;\n  }\n`;\nconst ContainerForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst FormTitle = styled.div``;\nconst Icon = styled.a`\n  display: block;\n  width: fit-content;\n  background-color: #e10050;\n  padding: 8px 10px;\n  border-radius: 50%;\n  margin: auto;\n`;\nconst Title = styled.h2`\n  font-weight: normal;\n  text-align: center;\n  letter-spacing: 0.16px;\n  line-height: 18px;\n`;\nconst HelperText = styled.a`\n  color: #2196f3;\n  letter-spacing: 0.16px;\n  font-size: 14px;\n  line-height: 18px;\n  text-decoration: none;\n  @media only screen and (max-width: 768px) {\n    font-size: 13px;\n  }\n  @media only screen and (max-width: 375px) {\n    font-size: 12px;\n  }\n`;\nconst EditedTextField = withStyles({\n  root: {\n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#2196F3\"\n      }\n    }\n  }\n})(TextField);\nconst useStyles = makeStyles(theme => createStyles({\n  buttonStyle: {\n    color: \"#fff\",\n    textTransform: \"inherit\"\n  }\n}));\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightBlue\n  }\n});\nconst CopyRightText = styled.p`\n  text-align: center;\n  font-size: 14px;\n  line-height: 18px;\n  letter-spacing: 0.16px;\n  color: rgba(0, 0, 0, 0.54);\n  margin-top: 20%;\n  @media only screen and (max-width: 576px) {\n    font-size: 11px;\n  }\n`;\n\nconst renderTextField = (_ref) => {\n  let label = _ref.label,\n      input = _ref.input,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      invalid = _ref$meta.invalid,\n      error = _ref$meta.error,\n      custom = _objectWithoutProperties(_ref, [\"label\", \"input\", \"meta\"]);\n\n  return React.createElement(EditedTextField, Object.assign({\n    label: label,\n    placeholder: label,\n    error: touched && invalid,\n    helperText: touched && error\n  }, input, custom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }));\n};\n\nconst renderCheckbox = ({\n  input,\n  label\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}, React.createElement(FormControlLabel, {\n  control: React.createElement(Checkbox, {\n    checked: input.value ? true : false,\n    onChange: input.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }),\n  label: label,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}));\n\nconst renderFromHelper = ({\n  touched,\n  error\n}) => {\n  if (!(touched && error)) {\n    return;\n  } else {\n    return React.createElement(FormHelperText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, touched && error);\n  }\n};\n\nconst Form = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        submitting = props.submitting,\n        classes = props.classes;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(ContainerForm, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(FormTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    style: {\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"\\u0412\\u0445\\u043E\\u0434 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\")), React.createElement(Field, {\n    id: \"user-email\",\n    label: \"\\u041F\\u043E\\u0447\\u0442\\u0430*\",\n    variant: \"outlined\",\n    size: \"small\",\n    margin: \"dense\",\n    component: renderTextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(Field, {\n    id: \"user-password\",\n    label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C*\",\n    type: \"password\",\n    variant: \"outlined\",\n    size: \"small\",\n    margin: \"dense\",\n    component: renderTextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"form-checkbox\",\n    component: renderCheckbox,\n    color: \"primary\",\n    label: \"\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C \\u043C\\u0435\\u043D\\u044F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    className: classes.buttonStyle,\n    disabled: pristine || submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0432 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\")), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginTop: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(HelperText, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C ? \"), React.createElement(HelperText, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"\\u0415\\u0449\\u0451 \\u043D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"))), React.createElement(CopyRightText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Copyright\\xA9 \\u0412\\u0430\\u0448 \\u0441\\u0430\\u0439\\u0442 2019.\"));\n};\n\nexport const LoginForm = reduxForm({\n  form: \"login-form\",\n  validate\n})(Form);","map":{"version":3,"sources":["D:/projets/loginForm/src/components/form/form.tsx"],"names":["React","Field","reduxForm","styled","LockOutlinedIcon","createMuiTheme","createStyles","makeStyles","ThemeProvider","withStyles","FormControlLabel","FormHelperText","Checkbox","Button","TextField","lightBlue","validate","values","errors","requiredFields","forEach","field","email","test","Container","div","ContainerForm","form","FormTitle","Icon","a","Title","h2","HelperText","EditedTextField","root","borderColor","useStyles","theme","buttonStyle","color","textTransform","palette","primary","CopyRightText","p","renderTextField","label","input","meta","touched","invalid","error","custom","renderCheckbox","value","onChange","renderFromHelper","Form","props","handleSubmit","pristine","submitting","classes","display","justifyContent","marginTop","LoginForm"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport styled from \"styled-components\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {\r\n  createMuiTheme,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  ThemeProvider,\r\n  withStyles\r\n} from \"@material-ui/core/styles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { lightBlue } from \"@material-ui/core/colors\";\r\n\r\nconst validate = (values: any) => {\r\n  const errors: any = {};\r\n  const requiredFields = [\"email\", \"password\"];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\";\r\n    }\r\n  });\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 35%;\r\n  height: max-content;\r\n  margin: auto;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  @media only screen and (max-width: 768px) {\r\n    width: 40%;\r\n  }\r\n  @media only screen and (max-width: 576px) {\r\n    width: 80%;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    width: 90%;\r\n  }\r\n`;\r\nconst ContainerForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst FormTitle = styled.div``;\r\nconst Icon = styled.a`\r\n  display: block;\r\n  width: fit-content;\r\n  background-color: #e10050;\r\n  padding: 8px 10px;\r\n  border-radius: 50%;\r\n  margin: auto;\r\n`;\r\nconst Title = styled.h2`\r\n  font-weight: normal;\r\n  text-align: center;\r\n  letter-spacing: 0.16px;\r\n  line-height: 18px;\r\n`;\r\nconst HelperText = styled.a`\r\n  color: #2196f3;\r\n  letter-spacing: 0.16px;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  text-decoration: none;\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 13px;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\nconst EditedTextField = withStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#2196F3\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buttonStyle: {\r\n      color: \"#fff\",\r\n      textTransform: \"inherit\"\r\n    }\r\n  })\r\n);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: lightBlue\r\n  }\r\n});\r\n\r\nconst CopyRightText = styled.p`\r\n  text-align: center;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: 0.16px;\r\n  color: rgba(0, 0, 0, 0.54);\r\n  margin-top: 20%;\r\n  @media only screen and (max-width: 576px) {\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}: any) => (\r\n  <EditedTextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n\r\nconst renderCheckbox = ({ input, label }: any) => (\r\n  <div>\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={input.value ? true : false}\r\n          onChange={input.onChange}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst renderFromHelper = ({ touched, error }: any) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nconst Form: React.FC = (props: any) => {\r\n  const { handleSubmit, pristine, submitting, classes } = props;\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerForm onSubmit={handleSubmit}>\r\n        <FormTitle>\r\n          <Icon>\r\n            <LockOutlinedIcon style={{ color: \"#fff\" }} />\r\n          </Icon>\r\n          <Title>Вход в аккаунт</Title>\r\n        </FormTitle>\r\n        <Field\r\n          id=\"user-email\"\r\n          label=\"Почта*\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          component={renderTextField}\r\n        />\r\n        <Field\r\n          id=\"user-password\"\r\n          label=\"Пароль*\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          margin=\"dense\"\r\n          component={renderTextField}\r\n        />\r\n        <Field\r\n          name=\"form-checkbox\"\r\n          component={renderCheckbox}\r\n          color=\"primary\"\r\n          label=\"Запомнить меня\"\r\n        />\r\n\r\n        <ThemeProvider theme={theme}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className={classes.buttonStyle}\r\n            disabled={pristine || submitting}\r\n          >\r\n            Войти в аккаунт\r\n          </Button>\r\n        </ThemeProvider>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginTop: \"10px\"\r\n          }}\r\n        >\r\n          <HelperText href=\"/\">Забыли пароль ? </HelperText>\r\n          <HelperText href=\"/\">Ещё нет аккаунта? Регистрация</HelperText>\r\n        </div>\r\n      </ContainerForm>\r\n      <CopyRightText>Copyright© Ваш сайт 2019.</CopyRightText>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const LoginForm = reduxForm({\r\n  form: \"login-form\",\r\n  validate\r\n})(Form);\r\n"]},"metadata":{},"sourceType":"module"}